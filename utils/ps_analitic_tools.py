"""
–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è performance scores (PS) –∏–≥—Ä–æ–∫–æ–≤ 
–≤ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã.

–≠—Ç–æ—Ç –º–æ–¥—É–ª—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏ —Ä–∞—Å—á–µ—Ç–∞ —Ä–∞–∑–Ω–∏—Ü—ã 
–≤ performance scores –∏–≥—Ä–æ–∫–æ–≤, –≥–µ–Ω–µ—Ä–∏—Ä—É—è –æ—Ç—á–µ—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å –≤–∏–∑—É–∞–ª—å–Ω—ã–º–∏ 
–∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π.

–û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
    –°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç performance scores –∏–≥—Ä–æ–∫–æ–≤ –º–µ–∂–¥—É –Ω–∞—á–∞–ª—å–Ω—ã–º –∏ —Ç–µ–∫—É—â–∏–º –Ω–∞–±–æ—Ä–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö
    –§–æ—Ä–º–∏—Ä—É–µ—Ç —Å—Ç—Ä–æ–∫—É —Å —Ä–∞–∑–Ω–∏—Ü–µ–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –∏ —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ –∏–≥—Ä–æ–∫–æ–≤
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —ç–º–æ–¥–∑–∏-–∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∏–Ω–∞–º–∏–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π (–∑–µ–ª–µ–Ω—ã–π/–∫—Ä–∞—Å–Ω—ã–π/–∂–µ–ª—Ç—ã–π)
"""

import logging
import traceback

import utils.ps_parser as ps_parser
logger = logging.getLogger(__name__)

class Analitic:
    """
    –ö–ª–∞—Å—Å –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏ —Ä—Å—Å—á—ë—Ç–∞ —Ä–∞–∑–Ω–∏—Ü—ã –≤ PS.
    """

    @staticmethod
    def difference_players_score_records(
        data_start: dict[str, dict[str, str| int |float]],
        data_end: dict[str, dict[str, str| int |float]],
    ) -> str:
        """
        –°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –∑–∞–ø–∏—Å–∏ performance scores (PS) –∏–≥—Ä–æ–∫–æ–≤ –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏.

        –í—ã—á–∏—Å–ª—è–µ—Ç —Ä–∞–∑–Ω–∏—Ü—É –≤ performance scores –∏–≥—Ä–æ–∫–æ–≤ –º–µ–∂–¥—É –¥–≤—É–º—è –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —Ç–æ—á–∫–∞–º–∏
        –∏ —Å–æ–∑–¥–∞–µ—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É —Å –¥–µ—Ç–∞–ª—è–º–∏, –≤–∫–ª—é—á–∞—è:
            –°—Ä–µ–¥–Ω–∏–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è
            –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –º–∞—Ç—á–∞
            –ù–∏–∫–Ω–µ–π–º –∏–≥—Ä–æ–∫–∞ —Å–æ —Å—Å—ã–ª–∫–æ–π –Ω–∞ –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—å

        Args:
            data_start (dict[str, dict[str, str| int |float]]): –ù–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ PS –∏–≥—Ä–æ–∫–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            data_end (dict[str, dict[str, str| int |float]]): –¢–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ PS –∏–≥—Ä–æ–∫–æ–≤

        Returns:
            str: –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è performance scores –∏–≥—Ä–æ–∫–æ–≤

        Raises:
            Exception: –ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ –¥–∞–Ω–Ω—ã–º –∏–≥—Ä–æ–∫–æ–≤
        """
        
        result_string = (f"<u>#{'avg':^7}|{'delta':^13}|{'last':^11}|{'nick':^10}#</u>\n")

        up_down_neutral_emoji = ("üü¢","üî¥","üü°")
        compare_index : int = None
        compare_difference : float = None

        for player, player_data in data_end.items():
            
            try:
                current_ps = data_start[player]['player_ps_day']
                next_ps = player_data['player_ps_day']
                last_match_ps = player_data['last_match_ps']

            except Exception as e:
                logger.error(f"difference_players_score_records: {e}")
                logger.error(traceback.format_exc())
                raise
            
            compare_difference = abs(next_ps - current_ps)

            if next_ps > current_ps:
                compare_index = 0
            elif next_ps < current_ps:
                compare_index = 1
            elif next_ps == current_ps:
                compare_index = 2

            result_string += (
                f"{current_ps:0>6.2f} | " +
                f"{up_down_neutral_emoji[compare_index]} {compare_difference:0>4.2f} | " +
                f"{last_match_ps:0>6.2f} | " +
                f'''<a href="{ps_parser.BASE_OMEDA_ADRESS}{player_data['omeda_id']}">{player[:7]}</a>\n'''
                )
        return  result_string

def main():
    pass


if __name__ == "__main__":
    main()